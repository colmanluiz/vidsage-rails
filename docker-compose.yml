services:
  # Redis for Sidekiq and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # PostgreSQL Database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_DB: vidsage_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  # MinIO for local S3-compatible object storage
  # minio:
  #   image: minio/minio:latest
  #   command: server /data --console-address ":9001"
  #   environment:
  #     MINIO_ROOT_USER: minioadmin
  #     MINIO_ROOT_PASSWORD: minioadmin123
  #   ports:
  #     - "9000:9000" # API
  #     - "9001:9001" # Console
  #   volumes:
  #     - minio_data:/data
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # Rails application (for future use)
  # web:
  #   build: .
  #   command: bundle exec rails server -b 0.0.0.0
  #   volumes:
  #     - .:/app
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   environment:
  #     DATABASE_URL: postgres://postgres:password@postgres:5432/vidsage_development
  #     REDIS_URL: redis://redis:6379/0
  #     MINIO_ENDPOINT: http://minio:9000
  #     MINIO_ACCESS_KEY: minioadmin
  #     MINIO_SECRET_KEY: minioadmin123

  # Sidekiq worker (for future use)
  # sidekiq:
  #   build: .
  #   command: bundle exec sidekiq
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   environment:
  #     DATABASE_URL: postgres://postgres:password@postgres:5432/vidsage_development
  #     REDIS_URL: redis://redis:6379/0

volumes:
  postgres_data:
  redis_data:
  # minio_data:
